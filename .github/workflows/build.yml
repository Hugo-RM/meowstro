name: Windows Build and Test

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: '5300a2a461a53b76405db4fcbe6aeb0eea43935d'

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.VCPKG_ROOT }}/installed
            ${{ env.VCPKG_ROOT }}/packages
            ${{ env.VCPKG_ROOT }}/buildtrees
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"

      - name: Build Project
        run: cmake --build build --parallel 4

      - name: Run Executable
        working-directory: build/bin/Debug
        run: ./meowstro.exe --test

      - name: Run cppcheck (static analysis)
        run: |
          if (!(Get-Command cppcheck -ErrorAction SilentlyContinue)) {
            choco install cppcheck -y
            refreshenv
          }
          cppcheck --enable=all --inconclusive --std=c++17 --quiet src include

      - name: Run clang-tidy (static analysis)
        run: |
          choco install llvm -y
          refreshenv
          cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"
          clang-tidy -p build $(Get-ChildItem -Path src -Filter *.cpp | ForEach-Object { $_.FullName })

      - name: Run ctest (unit tests)
        run: |
          cd build
          ctest --output-on-failure || true

      - name: Upload Executable Artifact (main branch only)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: meowstro-windows
          path: build/bin/Debug/

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SDL2 system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            cppcheck \
            clang-tidy

      - name: Configure CMake (system packages)
        run: cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build Project
        run: cmake --build build --parallel $(nproc)

      - name: Run Executable
        working-directory: build/bin/Debug
        run: ./meowstro --test

      - name: Run cppcheck (static analysis)
        run: |
          cppcheck --enable=all --inconclusive --std=c++17 --quiet \
            -I include \
            src

      - name: Run clang-tidy (static analysis)
        run: |
          if [ -f "build/compile_commands.json" ]; then
            clang-tidy -p build $(find src -name '*.cpp')
          else
            echo "No compilation database found, skipping clang-tidy"
          fi

      - name: Run ctest (unit tests)
        run: |
          cd build
          ctest --output-on-failure || echo "No tests configured"

      - name: Upload Executable Artifact (main branch only)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: meowstro-linux
          path: build/bin/Debug/

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install SDL2 via Homebrew
        run: |
          brew install \
            sdl2 \
            sdl2_image \
            sdl2_mixer \
            sdl2_ttf \
            cppcheck \
            llvm

      - name: Configure CMake (Homebrew packages)
        run: cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build Project
        run: cmake --build build --parallel $(sysctl -n hw.logicalcpu)

      - name: Run Executable
        working-directory: build/bin/Debug
        run: ./meowstro --test

      - name: Run cppcheck (static analysis)
        run: |
          cppcheck --enable=all --inconclusive --std=c++17 --quiet \
            --suppress=missingIncludeSystem \
            --suppress=missingInclude \
            -I include \
            src

      - name: Run clang-tidy (static analysis)
        run: |
          if [ -f "build/compile_commands.json" ]; then
            $(brew --prefix llvm)/bin/clang-tidy -p build $(find src -name '*.cpp')
          else
            echo "No compilation database found, skipping clang-tidy"
          fi

      - name: Run ctest (unit tests)
        run: |
          cd build
          ctest --output-on-failure || echo "No tests configured"

      - name: Upload Executable Artifact (main branch only)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: meowstro-macos
          path: build/bin/Debug/