name: Windows Build and Test

on:
  push:
    branches:
      - '**'
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 'latest'

      - name: Configure CMake
        run: >
          cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"

      - name: Build Project
        run: cmake --build build

      - name: Run Executable
        working-directory: build/bin/Debug
        run: |
          ./meowstro.exe || exit 0  # Game requires input to quit; ignore nonzero exit code

      - name: Run cppcheck (static analysis)
        run: |
          choco install cppcheck -y
          cppcheck --enable=all --inconclusive --std=c++17 --quiet src include

      - name: Run clang-tidy (static analysis)
        run: |
          choco install llvm -y
          cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"
          clang-tidy -p build $(Get-ChildItem -Path src -Filter *.cpp | ForEach-Object { $_.FullName })

      - name: Run ctest (unit tests)
        run: |
          cd build
          ctest --output-on-failure || true

      - name: Upload Executable Artifact (main branch only)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: meowstro-windows
          path: build/bin/Debug/
  
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 'latest'
      
      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"
      
      - name: Build Project
        run: cmake --build build
      
      - name: Run Executable
        working-directory: build/bin/Debug
        run: ./meowstro || true

      - name: Run cppcheck (static analysis)
        run: |
          sudo apt-get update && sudo apt-get install -y cppcheck
          cppcheck --enable=all --inconclusive --std=c++17 --quiet src include

      - name: Run clang-tidy (static analysis)
        run: |
          sudo apt-get update && sudo apt-get install -y clang-tidy
          cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"
          clang-tidy -p build $(find src -name '*.cpp')

      - name: Run ctest (unit tests)
        run: |
          cd build
          ctest --output-on-failure || true

      - name: Upload Executable Artifact (main branch only)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: meowstro-linux
          path: build/bin/Debug/

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 'latest'
      
      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"
      
      - name: Build Project
        run: cmake --build build
      
      - name: Run Executable
        working-directory: build/bin/Debug
        run: ./meowstro || true

      - name: Run cppcheck (static analysis)
        run: |
          brew install cppcheck
          cppcheck --enable=all --inconclusive --std=c++17 --quiet src include

      - name: Run clang-tidy (static analysis)
        run: |
          brew install llvm
          cmake -B build -S . -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"
          clang-tidy -p build $(find src -name '*.cpp')

      - name: Run ctest (unit tests)
        run: |
          cd build
          ctest --output-on-failure || true

      - name: Upload Executable Artifact (main branch only)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: meowstro-macos
          path: build/bin/Debug/